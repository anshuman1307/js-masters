{"version":3,"sources":["data.js","arrow-left-solid.svg","components/HomePage.jsx","components/QuestionAnswer.jsx","clone-regular.svg","App.js","index.js"],"names":["data","id","title","question","input","output","code","HomePage","props","state","className","map","val","route","split","join","toLowerCase","to","href","Component","QuestionAnswer","copyToClipboard","copyText","document","getElementById","select","setSelectionRange","execCommand","alert","value","setTimeout","Prism","highlightAll","this","setState","match","params","currentData","console","log","style","position","top","left","src","backarrow","alt","history","createBrowserHistory","App","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.526ea654.chunk.js","sourcesContent":["export const data = [\r\n  {\r\n    id: 1,\r\n    title: \"Binary array sorting\",\r\n    question:\r\n      \"Given a binary array, sort it using one traversal and no extra space.\",\r\n    input: \"[1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0]\",\r\n    output: \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1]\",\r\n    code: `function sortBinaryArray(a, n) {\\n  let j = -1;\\n  for (let i = 0; i < n; i++) {\\n    /* if number is smaller than 1\\n     then swap it with j-th number*/\\n    if (a[i] < 1) {\\n      j++;\\n      let temp = a[j];\\n      a[j] = a[i];\\n      a[i] = temp;\\n    }\\n  }\\n}\\n      \\n// driver function\\nlet a = [1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0];\\nlet n = a.length;\\nsortBinaryArray(a, n);\\nfor (let i = 0; i < n; i++)\\n   document.write(a[i] + \" \");\\n`,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Cash withdrawal from ATM machine\",\r\n    question:\r\n      \" Find minimum number of currency notes and values that sum to given amount\",\r\n    input: \"800\",\r\n    output: \"Currency Count-> 500 : 1, 200 : 1, 100 : 1\",\r\n    code: `function countCurrency(amount) {\\n  let notes = [2000, 500, 200, 100, 50, 20, 10, 5, 1];\\n  let noteCounter = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\n\\n  for (let i = 0; i < 9; i++) {\\n   if (amount >= notes[i]) {\\n   noteCounter[i] = Math.floor(amount / notes[i]);\\n   amount = amount - noteCounter[i] * notes[i];\\n    }\\n  }\\n  for (let i = 0; i < 9; i++) {\\n    if (noteCounter[i] != 0) {\\n   console.log(notes[i] + \" : \" + noteCounter[i]);\\n    }\\n  }\\n}\\n\\n// Driver Code\\nlet amount = 868;\\ncountCurrency(amount);\\n`,\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Anagrams\",\r\n    question: \" Check whether two strings are anagram of each other\",\r\n    input: \" s = 'anagram', t = nagaram'\",\r\n    output: \"true\",\r\n    code: `function countCurrency(amount) {\\n  let notes = [2000, 500, 200, 100, 50, 20, 10, 5, 1];\\n  let noteCounter = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\n\\n  for (let i = 0; i < 9; i++) {\\n   if (amount >= notes[i]) {\\n   noteCounter[i] = Math.floor(amount / notes[i]);\\n   amount = amount - noteCounter[i] * notes[i];\\n    }\\n  }\\n  for (let i = 0; i < 9; i++) {\\n    if (noteCounter[i] != 0) {\\n   console.log(notes[i] + \" : \" + noteCounter[i]);\\n    }\\n  }\\n}\\n\\n// Driver Code\\nlet amount = 868;\\ncountCurrency(amount);\\n`,\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Function Currying\",\r\n    question: \" Implement function currying to execute below function\",\r\n    input: \" total(1)(2)(3)(4)(5) \",\r\n    output: \"15\",\r\n    code: `const sum = function (a) {\\n  return function (b) {\\n    if (b) {\\n      return sum(a + b); // it takes an argument and return a function which again can take an argument.\\n    }\\n    return a; // it will keep on adding 1+2+3+4..\\n  };\\n};\\n\\nconsole.log(sum(1)(2)()); //3\\nconsole.log(sum(1)(2)(3)(4)()); //10\\n`,\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Minimum Number of Platforms Required for a Railway or Bus Station\",\r\n    question:\r\n      \"Given the arrival and departure times of all trains that reach a railway station, the task is to find the minimum number of platforms required for the railway station so that no train waits. \",\r\n    input:\r\n      \" arr[] = {9:00, 9:40, 9:50, 11:00, 15:00, 18:00} dep[] = {9:10, 12:00, 11:20, 11:30, 19:00, 20:00} \",\r\n    output:\r\n      \"3 (There are at-most three trains at a time (time between 11:00 to 11:20))\",\r\n    code: `function max(a, b) {\\n  if (a == b) return a;\\n  else {\\n    if (a > b) return a;\\n    else return b;\\n  }\\n}\\nfunction findPlatform(arr, dep, n) {\\n  // plat_needed indicates number of platforms\\n  // needed at a time\\n  var plat_needed = 1,\\n    result = 1;\\n  var i = 1,\\n    j = 0;\\n  // run a nested loop to find overlap\\n  for (var i = 0; i < n; i++) {\\n    // minimum platform\\n    plat_needed = 1;\\n    for (var j = i + 1; j < n; j++) {\\n      // check for overlap\\n      if (\\n        (arr[i] >= arr[j] && arr[i] <= dep[j]) ||\\n        (arr[j] >= arr[i] && arr[j] <= dep[i])\\n      )\\n        plat_needed++;\\n    }\\n    // update result\\n    result = max(result, plat_needed);\\n  }\\n  return result;\\n}\\n\\nvar arr = [900, 940, 950, 1100, 1500, 1800];\\nvar dep = [910, 1200, 1120, 1130, 1900, 2000];\\nvar n = 6;\\ndocument.write(\\n  \"Minimum Number of Platforms Required = \" + findPlatform(arr, dep, n)\\n);\\n`,\r\n  },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/arrow-left-solid.f8250ac5.svg\";","import React, { Component } from \"react\";\r\nimport { data } from \"../data\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport backarrow from \"../arrow-left-solid.svg\";\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"header\">\r\n          JS Masters\r\n          {/* <Link to={`/js-masters`}>\r\n              <nav style={{ position: \"fixed\", top: \"-5px\", left: \"3%\" }}>\r\n                <img src={backarrow} alt=\"back\" />\r\n              </nav>\r\n            </Link> */}\r\n        </header>\r\n        {data.map((val) => {\r\n          let route = val.title.split(\" \").join(\"-\").toLowerCase();\r\n          return (\r\n            <div key={val.title} className=\"question-list\">\r\n              <div className=\"card w-75\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{val.title}</h5>\r\n                  <p className=\"card-text\">{val.question}</p>\r\n                  <div className=\"inptotpt\">\r\n                    <p className=\"input\">&#8226; Input : {val.input}</p>\r\n                    <p className=\"output\">&#8226; Output : {val.output}</p>\r\n                  </div>\r\n                  <Link to={`/js-masters/details/${route}/${val.id}`}>\r\n                    <a href=\"#\" className=\"btn btn-success\">\r\n                      View Code\r\n                    </a>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport { data } from \"../data\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Prism from \"prismjs\";\r\nimport copy from \"../clone-regular.svg\";\r\nimport backarrow from \"../arrow-left-solid.svg\";\r\n\r\nclass QuestionAnswer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(() => Prism.highlightAll(), 0);\r\n    this.setState({ id: this.props.match.params.id });\r\n  }\r\n  copyToClipboard = () => {\r\n    var copyText = document.getElementById(\"code\");\r\n    copyText.select();\r\n    copyText.setSelectionRange(0, 99999); /* For mobile devices */\r\n    document.execCommand(\"copy\");\r\n    alert(\"Copied the text: \" + copyText.value);\r\n  };\r\n  render() {\r\n    let currentData;\r\n    if (this.state.id) {\r\n      currentData = data[this.state.id - 1];\r\n    }\r\n    console.log(this.state.id);\r\n    return (\r\n      <>\r\n        <header className=\"header\">\r\n          JS Masters\r\n          <Link to={`/js-masters`}>\r\n            <nav style={{ position: \"fixed\", top: \"-5px\", left: \"3%\" }}>\r\n              <img src={backarrow} alt=\"back\" />\r\n            </nav>\r\n          </Link>\r\n        </header>\r\n        <div className=\"card question-container\">\r\n          {currentData && (\r\n            <>\r\n              <div className=\"card-title\">{currentData.title}</div>\r\n              <div className=\"card-text\">{currentData.question}</div>\r\n              <div className=\"detailsinptotpt\">\r\n                <p className=\"input\">Input : {currentData.input}</p>\r\n                <p className=\"output\">Output : {currentData.output}</p>\r\n              </div>\r\n              <div className=\"code card-title\">\r\n                Solution :\r\n                {/* <img\r\n                src={copy}\r\n                alt=\"Copy\"\r\n                style={{ position: \"relative\", top: \"44px\", left: \"69%\" }}\r\n                onClick={() => this.copyToClipboard()}\r\n              /> */}\r\n                <pre>\r\n                  <code id=\"code\" className=\"lang-css\">\r\n                    {currentData.code}\r\n                  </code>\r\n                </pre>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionAnswer;\r\n","export default __webpack_public_path__ + \"static/media/clone-regular.47f24f2c.svg\";","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport HomePage from \"./components/HomePage.jsx\";\r\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\r\nimport QuestionAnswer from \"./components/QuestionAnswer.jsx\";\r\nimport backarrow from \"./arrow-left-solid.svg\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nfunction App() {\r\n  console.log(history);\r\n  return (\r\n    <HashRouter>\r\n      <>\r\n        <Switch>\r\n          <Route\r\n            path=\"/js-masters/details/:question/:id\"\r\n            component={QuestionAnswer}\r\n          ></Route>\r\n          <Route path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n        </Switch>\r\n      </>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}